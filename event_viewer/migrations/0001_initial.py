# Generated by Django 5.2.3 on 2025-08-04 20:23

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EventSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True)),
                ('debug_count', models.IntegerField(default=0)),
                ('info_count', models.IntegerField(default=0)),
                ('warning_count', models.IntegerField(default=0)),
                ('error_count', models.IntegerField(default=0)),
                ('critical_count', models.IntegerField(default=0)),
                ('exception_count', models.IntegerField(default=0)),
                ('performance_count', models.IntegerField(default=0)),
                ('security_count', models.IntegerField(default=0)),
                ('data_quality_count', models.IntegerField(default=0)),
                ('avg_response_time_ms', models.FloatField(blank=True, null=True)),
                ('max_response_time_ms', models.IntegerField(blank=True, null=True)),
                ('slow_request_count', models.IntegerField(default=0)),
                ('unique_users_affected', models.IntegerField(default=0)),
                ('unique_ips', models.IntegerField(default=0)),
                ('events_resolved', models.IntegerField(default=0)),
                ('avg_resolution_hours', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Event Summary',
                'verbose_name_plural': 'Event Summaries',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='SystemEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('source', models.CharField(choices=[('django_error', 'Django Error Handler'), ('middleware', 'Error Middleware'), ('log_parser', 'Log File Parser'), ('performance', 'Performance Monitor'), ('ai_system', 'AI System'), ('test_runner', 'Test Runner'), ('cache', 'Cache System'), ('database', 'Database'), ('api', 'API Endpoint'), ('background_task', 'Background Task'), ('user_report', 'User Report'), ('health_check', 'Health Check')], db_index=True, max_length=50)),
                ('level', models.CharField(choices=[('debug', 'Debug'), ('info', 'Info'), ('warning', 'Warning'), ('error', 'Error'), ('critical', 'Critical')], db_index=True, max_length=20)),
                ('category', models.CharField(choices=[('exception', 'Exception/Error'), ('performance', 'Performance Issue'), ('security', 'Security Event'), ('data_quality', 'Data Quality Issue'), ('integration', 'External Integration'), ('resource', 'Resource Issue'), ('configuration', 'Configuration Issue'), ('test_failure', 'Test Failure')], db_index=True, max_length=50)),
                ('title', models.CharField(help_text='Brief description of the event', max_length=255)),
                ('message', models.TextField(help_text='Detailed event message')),
                ('exception_type', models.CharField(blank=True, db_index=True, max_length=100)),
                ('exception_value', models.TextField(blank=True)),
                ('stack_trace', models.TextField(blank=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('request_path', models.CharField(blank=True, db_index=True, max_length=500)),
                ('request_method', models.CharField(blank=True, max_length=10)),
                ('duration_ms', models.IntegerField(blank=True, help_text='Duration in milliseconds for performance events', null=True)),
                ('memory_mb', models.IntegerField(blank=True, help_text='Memory usage in MB', null=True)),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('details', models.JSONField(blank=True, default=dict, help_text='Additional structured data about the event')),
                ('tags', models.JSONField(blank=True, default=list, help_text='List of tags for categorization')),
                ('resolved', models.BooleanField(db_index=True, default=False)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('resolution_notes', models.TextField(blank=True)),
                ('fingerprint', models.CharField(blank=True, db_index=True, help_text='Hash to group similar events together', max_length=255)),
                ('occurrence_count', models.IntegerField(default=1)),
                ('first_seen', models.DateTimeField(auto_now_add=True)),
                ('last_seen', models.DateTimeField(auto_now=True)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_events', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='system_events', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'System Event',
                'verbose_name_plural': 'System Events',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['timestamp', 'level'], name='event_viewe_timesta_c32e56_idx'), models.Index(fields=['source', 'timestamp'], name='event_viewe_source_f8ad04_idx'), models.Index(fields=['resolved', 'level', 'timestamp'], name='event_viewe_resolve_bc60dd_idx'), models.Index(fields=['exception_type', 'timestamp'], name='event_viewe_excepti_deaad7_idx'), models.Index(fields=['fingerprint', 'timestamp'], name='event_viewe_fingerp_9b6772_idx')],
            },
        ),
    ]
