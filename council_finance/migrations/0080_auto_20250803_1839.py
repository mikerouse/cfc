# Generated by Django 5.2.3 on 2025-08-03 17:39

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('council_finance', '0079_auto_20250803_1800'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SitewideDataSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_calculated', models.DateField(default=django.utils.timezone.now)),
                ('total_councils', models.IntegerField(default=0)),
                ('average_value', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('median_value', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('min_value', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('max_value', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('std_deviation', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('top_5_councils', models.JSONField(default=list)),
                ('bottom_5_councils', models.JSONField(default=list)),
                ('type_averages', models.JSONField(default=dict)),
                ('nation_averages', models.JSONField(default=dict)),
                ('data_completeness', models.FloatField(default=0.0)),
                ('outlier_count', models.IntegerField(default=0)),
                ('data_hash', models.CharField(max_length=64)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='council_finance.datafield')),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='council_finance.financialyear')),
            ],
            options={
                'db_table': 'sitewide_data_summary',
                'ordering': ['-date_calculated', 'field__name'],
            },
        ),
        migrations.CreateModel(
            name='SitewideDataChangeLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('change_type', models.CharField(choices=[('data_update', 'Financial Data Updated'), ('new_council', 'New Council Added'), ('new_field', 'New Field Added'), ('council_removed', 'Council Removed'), ('field_removed', 'Field Removed'), ('bulk_import', 'Bulk Data Import')], max_length=20)),
                ('old_hash', models.CharField(blank=True, max_length=64)),
                ('new_hash', models.CharField(max_length=64)),
                ('change_magnitude', models.FloatField(default=0.0)),
                ('processed', models.BooleanField(default=False)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('affected_council', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='council_finance.council')),
                ('affected_field', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='council_finance.datafield')),
                ('affected_year', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='council_finance.financialyear')),
            ],
            options={
                'db_table': 'sitewide_data_change_log',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='SitewideFactoidSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('update_times', models.JSONField(default=list, help_text="Update times in 24-hour format, e.g., ['06:00', '10:30', '14:00', '18:30']")),
                ('is_active', models.BooleanField(default=True)),
                ('last_data_check', models.DateTimeField(blank=True, null=True)),
                ('last_generation', models.DateTimeField(blank=True, null=True)),
                ('next_scheduled_check', models.DateTimeField(blank=True, null=True)),
                ('last_data_hash', models.CharField(blank=True, max_length=64)),
                ('pending_changes', models.BooleanField(default=False)),
                ('change_count_since_last_generation', models.IntegerField(default=0)),
                ('generation_count_today', models.IntegerField(default=0)),
                ('avg_generation_time', models.FloatField(default=0.0)),
                ('last_generation_time', models.FloatField(blank=True, null=True)),
                ('total_generations', models.IntegerField(default=0)),
                ('success_rate_7_days', models.FloatField(default=100.0)),
                ('last_error', models.TextField(blank=True)),
                ('last_error_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'sitewide_factoid_schedule',
            },
        ),
        migrations.CreateModel(
            name='OptimizedFactoidCache',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cache_level', models.CharField(choices=[('summaries', 'Pre-aggregated Summaries'), ('factoids', 'Generated Factoids'), ('fallback', 'Emergency Fallback')], max_length=20)),
                ('cache_key', models.CharField(max_length=255, unique=True)),
                ('content', models.JSONField()),
                ('content_hash', models.CharField(max_length=64)),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('access_count', models.IntegerField(default=0)),
                ('last_accessed', models.DateTimeField(blank=True, null=True)),
                ('generation_time', models.FloatField(blank=True, null=True)),
                ('content_size', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'optimized_factoid_cache',
                'ordering': ['-generated_at'],
            },
        ),
        migrations.AddConstraint(
            model_name='sitewidedatasummary',
            constraint=models.UniqueConstraint(fields=('date_calculated', 'year', 'field'), name='unique_summary_date_year_field'),
        ),
        migrations.AddIndex(
            model_name='sitewidedatasummary',
            index=models.Index(fields=['date_calculated', 'year'], name='sitewide_da_date_ca_fda1ec_idx'),
        ),
        migrations.AddIndex(
            model_name='sitewidedatasummary',
            index=models.Index(fields=['field', 'data_hash'], name='sitewide_da_field_i_b12345_idx'),
        ),
        migrations.AddIndex(
            model_name='sitewidedatasummary',
            index=models.Index(fields=['data_completeness'], name='sitewide_da_data_co_abc123_idx'),
        ),
        migrations.AddIndex(
            model_name='sitewidedatachangelog',
            index=models.Index(fields=['timestamp', 'processed'], name='sitewide_da_timesta_def456_idx'),
        ),
        migrations.AddIndex(
            model_name='sitewidedatachangelog',
            index=models.Index(fields=['change_type', 'processed'], name='sitewide_da_change__ghi789_idx'),
        ),
        migrations.AddIndex(
            model_name='sitewidedatachangelog',
            index=models.Index(fields=['affected_field', 'processed'], name='sitewide_da_affecte_jkl012_idx'),
        ),
        migrations.AddIndex(
            model_name='optimizedfactoidcache',
            index=models.Index(fields=['cache_level', 'expires_at'], name='optimized__cache_l_mno345_idx'),
        ),
        migrations.AddIndex(
            model_name='optimizedfactoidcache',
            index=models.Index(fields=['cache_key'], name='optimized__cache_k_pqr678_idx'),
        ),
        migrations.AddIndex(
            model_name='optimizedfactoidcache',
            index=models.Index(fields=['expires_at'], name='optimized__expires_stu901_idx'),
        ),
    ]
