# Generated by Django 5.2.3 on 2025-07-21 19:50

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('council_finance', '0056_add_council_data_models'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='factoid',
            options={'verbose_name': 'Legacy Factoid', 'verbose_name_plural': 'Legacy Factoids'},
        ),
        migrations.CreateModel(
            name='FactoidPlaylist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('auto_generate', models.BooleanField(default=True, help_text='Auto-generate relevant factoids')),
                ('computed_factoids', models.JSONField(blank=True, default=list)),
                ('last_computed', models.DateTimeField(blank=True, null=True)),
                ('council', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='council_finance.council')),
                ('counter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='council_finance.counterdefinition')),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='council_finance.financialyear')),
            ],
            options={
                'verbose_name': 'Factoid Playlist',
                'verbose_name_plural': 'Factoid Playlists',
            },
        ),
        migrations.CreateModel(
            name='FactoidTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('factoid_type', models.CharField(choices=[('percent_change', 'üìä Percentage Change'), ('ranking', 'üèÜ Council Ranking'), ('comparison', '‚öñÔ∏è Peer Comparison'), ('trend', 'üìà Multi-Year Trend'), ('ratio', 'üî¢ Financial Ratio'), ('per_capita', 'üë§ Per Capita Analysis'), ('sustainability', 'üå± Financial Health'), ('milestone', 'üéØ Milestone Achievement'), ('anomaly', '‚ö†Ô∏è Data Anomaly'), ('context', 'üìã Contextual Information')], max_length=20)),
                ('template_text', models.TextField(help_text='Use {{variables}} for dynamic content')),
                ('emoji', models.CharField(blank=True, help_text='Primary emoji for this factoid', max_length=10)),
                ('color_scheme', models.CharField(choices=[('green', 'üü¢ Positive (Green)'), ('red', 'üî¥ Negative (Red)'), ('blue', 'üîµ Neutral (Blue)'), ('orange', 'üü† Warning (Orange)'), ('purple', 'üü£ Special (Purple)')], default='blue', max_length=20)),
                ('animation_duration', models.PositiveIntegerField(default=5000, help_text='Display duration in milliseconds')),
                ('flip_animation', models.BooleanField(default=True, help_text='Enable flip animation')),
                ('priority', models.IntegerField(default=0, help_text='Higher priority shows first')),
                ('min_value', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('max_value', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('requires_previous_year', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('council_types', models.ManyToManyField(blank=True, to='council_finance.counciltype')),
                ('counters', models.ManyToManyField(blank=True, to='council_finance.counterdefinition')),
                ('group_counters', models.ManyToManyField(blank=True, to='council_finance.groupcounter')),
                ('site_counters', models.ManyToManyField(blank=True, to='council_finance.sitecounter')),
            ],
            options={
                'verbose_name': 'Factoid Template',
                'verbose_name_plural': 'Factoid Templates',
                'ordering': ['-priority', 'name'],
            },
        ),
        migrations.CreateModel(
            name='PlaylistItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rendered_text', models.TextField(blank=True)),
                ('computed_data', models.JSONField(default=dict)),
                ('is_relevant', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('factoid_template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='council_finance.factoidtemplate')),
                ('playlist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='council_finance.factoidplaylist')),
            ],
            options={
                'verbose_name': 'Playlist Item',
                'verbose_name_plural': 'Playlist Items',
                'ordering': ['order'],
                'unique_together': {('playlist', 'factoid_template')},
            },
        ),
        migrations.AddField(
            model_name='factoidplaylist',
            name='factoid_templates',
            field=models.ManyToManyField(through='council_finance.PlaylistItem', to='council_finance.factoidtemplate'),
        ),
        migrations.AlterUniqueTogether(
            name='factoidplaylist',
            unique_together={('counter', 'council', 'year')},
        ),
    ]
