# Generated by Django 5.2.3 on 2025-07-17 20:36

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('council_finance', '0053_counterdefinition_created_by'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FeedUpdate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('update_type', models.CharField(choices=[('financial', 'Financial Data Update'), ('contribution', 'User Contribution'), ('council_news', 'Council News'), ('list_change', 'List Modification'), ('system', 'System Update'), ('achievement', 'User Achievement')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('rich_content', models.JSONField(blank=True, default=dict)),
                ('is_public', models.BooleanField(default=True)),
                ('targeted_followers_only', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('like_count', models.PositiveIntegerField(default=0)),
                ('comment_count', models.PositiveIntegerField(default=0)),
                ('share_count', models.PositiveIntegerField(default=0)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='authored_updates', to=settings.AUTH_USER_MODEL)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FeedInteraction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interaction_type', models.CharField(choices=[('like', 'Like'), ('dislike', 'Dislike'), ('share', 'Share'), ('bookmark', 'Bookmark'), ('flag', 'Flag as Inappropriate')], max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('update', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interactions', to='council_finance.feedupdate')),
            ],
        ),
        migrations.CreateModel(
            name='FeedComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('is_approved', models.BooleanField(default=True)),
                ('is_flagged', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('like_count', models.PositiveIntegerField(default=0)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='council_finance.feedcomment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('update', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='council_finance.feedupdate')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='FollowableItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('priority', models.CharField(choices=[('low', 'Low Priority'), ('normal', 'Normal Priority'), ('high', 'High Priority'), ('critical', 'Critical Priority')], default='normal', max_length=10)),
                ('email_notifications', models.BooleanField(default=True)),
                ('push_notifications', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_viewed', models.DateTimeField(blank=True, null=True)),
                ('interaction_count', models.PositiveIntegerField(default=0)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='follows', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TrendingContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('trend_score', models.FloatField(default=0.0)),
                ('follow_velocity', models.FloatField(default=0.0)),
                ('engagement_velocity', models.FloatField(default=0.0)),
                ('view_velocity', models.FloatField(default=0.0)),
                ('period_start', models.DateTimeField()),
                ('period_end', models.DateTimeField()),
                ('reason', models.TextField(blank=True)),
                ('is_promoted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'ordering': ['-trend_score'],
            },
        ),
        migrations.CreateModel(
            name='UserFeedPreferences',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('algorithm', models.CharField(choices=[('chronological', 'Chronological (Newest First)'), ('engagement', 'High Engagement First'), ('priority', 'Your Priorities First'), ('mixed', 'Smart Mix (Recommended)')], default='mixed', max_length=20)),
                ('show_financial_updates', models.BooleanField(default=True)),
                ('show_contributions', models.BooleanField(default=True)),
                ('show_council_news', models.BooleanField(default=True)),
                ('show_list_changes', models.BooleanField(default=True)),
                ('show_system_updates', models.BooleanField(default=False)),
                ('show_achievements', models.BooleanField(default=True)),
                ('auto_mark_read', models.BooleanField(default=False)),
                ('digest_frequency', models.CharField(choices=[('realtime', 'Real-time'), ('daily', 'Daily Digest'), ('weekly', 'Weekly Digest'), ('never', 'Never')], default='realtime', max_length=10)),
                ('email_notifications', models.BooleanField(default=True)),
                ('push_notifications', models.BooleanField(default=True)),
                ('notification_quiet_hours_start', models.TimeField(blank=True, null=True)),
                ('notification_quiet_hours_end', models.TimeField(blank=True, null=True)),
                ('public_activity', models.BooleanField(default=True)),
                ('show_in_suggestions', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='feed_preferences', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddIndex(
            model_name='feedupdate',
            index=models.Index(fields=['update_type', '-created_at'], name='council_fin_update__64c1f8_idx'),
        ),
        migrations.AddIndex(
            model_name='feedupdate',
            index=models.Index(fields=['content_type', 'object_id'], name='council_fin_content_9fa09c_idx'),
        ),
        migrations.AddIndex(
            model_name='feedupdate',
            index=models.Index(fields=['is_public', '-created_at'], name='council_fin_is_publ_51d71f_idx'),
        ),
        migrations.AddIndex(
            model_name='feedupdate',
            index=models.Index(fields=['author', '-created_at'], name='council_fin_author__1a0e3c_idx'),
        ),
        migrations.AddIndex(
            model_name='feedinteraction',
            index=models.Index(fields=['update', 'interaction_type'], name='council_fin_update__fda6bd_idx'),
        ),
        migrations.AddIndex(
            model_name='feedinteraction',
            index=models.Index(fields=['user', 'interaction_type', '-created_at'], name='council_fin_user_id_2e8c9f_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='feedinteraction',
            unique_together={('user', 'update', 'interaction_type')},
        ),
        migrations.AddIndex(
            model_name='feedcomment',
            index=models.Index(fields=['update', 'is_approved', 'created_at'], name='council_fin_update__ef29fd_idx'),
        ),
        migrations.AddIndex(
            model_name='feedcomment',
            index=models.Index(fields=['user', '-created_at'], name='council_fin_user_id_086f17_idx'),
        ),
        migrations.AddIndex(
            model_name='feedcomment',
            index=models.Index(fields=['parent'], name='council_fin_parent__0b7a88_idx'),
        ),
        migrations.AddIndex(
            model_name='followableitem',
            index=models.Index(fields=['user', 'priority'], name='council_fin_user_id_33d080_idx'),
        ),
        migrations.AddIndex(
            model_name='followableitem',
            index=models.Index(fields=['content_type', 'object_id'], name='council_fin_content_44f627_idx'),
        ),
        migrations.AddIndex(
            model_name='followableitem',
            index=models.Index(fields=['user', 'last_viewed'], name='council_fin_user_id_ac5166_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='followableitem',
            unique_together={('user', 'content_type', 'object_id')},
        ),
        migrations.AddIndex(
            model_name='trendingcontent',
            index=models.Index(fields=['-trend_score', 'is_promoted'], name='council_fin_trend_s_4dba1b_idx'),
        ),
        migrations.AddIndex(
            model_name='trendingcontent',
            index=models.Index(fields=['content_type', 'object_id'], name='council_fin_content_b7a902_idx'),
        ),
        migrations.AddIndex(
            model_name='trendingcontent',
            index=models.Index(fields=['period_start', 'period_end'], name='council_fin_period__eddcdc_idx'),
        ),
    ]
