# Generated by Django 5.2.3 on 2025-08-05 23:20

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('council_finance', '0089_make_council_type_slug_unique'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SiteAnnouncement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Main announcement text', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Additional details (optional)', validators=[django.core.validators.MaxLengthValidator(500)])),
                ('announcement_type', models.CharField(choices=[('info', 'Information'), ('warning', 'Warning'), ('success', 'Success'), ('error', 'Error/Alert'), ('maintenance', 'Maintenance'), ('feature', 'New Feature'), ('test', 'Testing Phase')], default='info', help_text='Visual style and importance level', max_length=20)),
                ('link_text', models.CharField(blank=True, help_text='Text for action link (optional)', max_length=100)),
                ('link_url', models.CharField(blank=True, help_text='URL for action link (can be internal path or external URL)', max_length=500)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this announcement is currently displayed')),
                ('is_dismissible', models.BooleanField(default=True, help_text='Whether users can dismiss this announcement')),
                ('show_on_all_pages', models.BooleanField(default=True, help_text='Show on all pages or just homepage')),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now, help_text='When to start showing this announcement')),
                ('end_date', models.DateTimeField(blank=True, help_text='When to stop showing this announcement (optional)', null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('view_count', models.PositiveIntegerField(default=0, help_text='Number of times this announcement was displayed')),
                ('click_count', models.PositiveIntegerField(default=0, help_text='Number of times the action link was clicked')),
                ('created_by', models.ForeignKey(help_text='Administrator who created this announcement', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Site Announcement',
                'verbose_name_plural': 'Site Announcements',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='SiteFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback_type', models.CharField(choices=[('bug', 'Bug Report'), ('feature', 'Feature Request'), ('improvement', 'Improvement Suggestion'), ('usability', 'Usability Issue'), ('content', 'Content Issue'), ('performance', 'Performance Issue'), ('general', 'General Feedback')], default='general', help_text='What type of feedback is this?', max_length=20)),
                ('title', models.CharField(help_text='Brief summary of the issue or suggestion', max_length=200)),
                ('description', models.TextField(help_text='Detailed description of the issue, suggestion, or feedback', validators=[django.core.validators.MaxLengthValidator(2000)])),
                ('severity', models.CharField(choices=[('low', 'Low - Minor issue or suggestion'), ('medium', 'Medium - Affects functionality'), ('high', 'High - Major problem or blocker'), ('critical', 'Critical - Site unusable')], default='medium', help_text='How severe is this issue?', max_length=10)),
                ('page_url', models.URLField(blank=True, help_text='URL where the issue occurred')),
                ('user_agent', models.TextField(blank=True, help_text='Browser and device information')),
                ('screen_resolution', models.CharField(blank=True, help_text='Screen resolution when issue occurred', max_length=20)),
                ('steps_to_reproduce', models.TextField(blank=True, help_text='Steps to reproduce the issue (for bugs)', validators=[django.core.validators.MaxLengthValidator(1000)])),
                ('expected_behaviour', models.TextField(blank=True, help_text='What did you expect to happen?', validators=[django.core.validators.MaxLengthValidator(500)])),
                ('actual_behaviour', models.TextField(blank=True, help_text='What actually happened?', validators=[django.core.validators.MaxLengthValidator(500)])),
                ('contact_email', models.EmailField(blank=True, help_text='Email address for follow-up (optional)', max_length=254)),
                ('contact_name', models.CharField(blank=True, help_text='Name for follow-up (optional)', max_length=100)),
                ('submitted_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('status', models.CharField(choices=[('new', 'New'), ('acknowledged', 'Acknowledged'), ('in_progress', 'In Progress'), ('resolved', 'Resolved'), ('wont_fix', "Won't Fix"), ('duplicate', 'Duplicate')], default='new', help_text='Current status of this feedback', max_length=20)),
                ('admin_notes', models.TextField(blank=True, help_text='Internal notes for administrators')),
                ('resolved_at', models.DateTimeField(blank=True, help_text='When this feedback was resolved', null=True)),
                ('votes', models.PositiveIntegerField(default=0, help_text='Number of users who upvoted this suggestion')),
                ('resolved_by', models.ForeignKey(blank=True, help_text='Administrator who resolved this feedback', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_feedback', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, help_text='User who submitted the feedback (if logged in)', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Site Feedback',
                'verbose_name_plural': 'Site Feedback',
                'ordering': ['-submitted_at'],
                'indexes': [models.Index(fields=['feedback_type', 'status'], name='council_fin_feedbac_598f3b_idx'), models.Index(fields=['severity', 'submitted_at'], name='council_fin_severit_10dc9d_idx'), models.Index(fields=['status', 'submitted_at'], name='council_fin_status_f2b44a_idx')],
            },
        ),
    ]
