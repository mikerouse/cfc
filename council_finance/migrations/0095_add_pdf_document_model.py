# Generated by Django 5.2.3 on 2025-08-11 08:09

import council_finance.models.pdf_document
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('council_finance', '0094_create_counter_result_model'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PDFDocument',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('original_filename', models.CharField(help_text='Original filename when uploaded', max_length=255)),
                ('file', models.FileField(help_text='The PDF file itself', max_length=500, upload_to=council_finance.models.pdf_document.pdf_upload_path)),
                ('file_size', models.PositiveIntegerField(blank=True, help_text='File size in bytes', null=True)),
                ('file_hash', models.CharField(blank=True, help_text='SHA-256 hash for integrity verification', max_length=64, null=True)),
                ('processing_status', models.CharField(choices=[('pending', 'Pending Processing'), ('processing', 'Processing in Progress'), ('completed', 'Processing Completed'), ('failed', 'Processing Failed'), ('cancelled', 'Processing Cancelled')], default='pending', help_text='Current processing status', max_length=20)),
                ('processing_started_at', models.DateTimeField(blank=True, null=True)),
                ('processing_completed_at', models.DateTimeField(blank=True, null=True)),
                ('processing_error', models.TextField(blank=True, help_text='Error message if processing failed', null=True)),
                ('page_count', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('pdf_title', models.CharField(blank=True, max_length=500, null=True)),
                ('pdf_author', models.CharField(blank=True, max_length=200, null=True)),
                ('pdf_subject', models.CharField(blank=True, max_length=500, null=True)),
                ('pdf_creator', models.CharField(blank=True, max_length=200, null=True)),
                ('pdf_producer', models.CharField(blank=True, max_length=200, null=True)),
                ('pdf_creation_date', models.DateTimeField(blank=True, null=True)),
                ('pdf_modification_date', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this PDF is active and accessible')),
                ('access_token', models.CharField(blank=True, help_text='Secure access token for PDF viewing', max_length=64, null=True)),
                ('access_expires_at', models.DateTimeField(blank=True, help_text='When the access token expires', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_accessed_at', models.DateTimeField(blank=True, null=True)),
                ('access_count', models.PositiveIntegerField(default=0)),
                ('extraction_results', models.JSONField(blank=True, help_text='Results from AI/regex extraction process', null=True)),
                ('confidence_scores', models.JSONField(blank=True, help_text='Confidence scores for each extracted field', null=True)),
                ('council', models.ForeignKey(help_text='Council this PDF relates to', on_delete=django.db.models.deletion.CASCADE, related_name='pdf_documents', to='council_finance.council')),
                ('financial_year', models.ForeignKey(help_text='Financial year this PDF covers', on_delete=django.db.models.deletion.CASCADE, related_name='pdf_documents', to='council_finance.financialyear')),
                ('uploaded_by', models.ForeignKey(blank=True, help_text='User who uploaded this PDF', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='uploaded_pdfs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'council_finance_pdfdocument',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PDFProcessingLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(choices=[('debug', 'Debug'), ('info', 'Info'), ('warning', 'Warning'), ('error', 'Error'), ('critical', 'Critical')], default='info', max_length=10)),
                ('step', models.CharField(help_text="Processing step (e.g., 'text_extraction', 'ai_analysis')", max_length=100)),
                ('message', models.TextField(help_text='Log message')),
                ('data', models.JSONField(blank=True, help_text='Additional structured data for this log entry', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('pdf_document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='processing_logs', to='council_finance.pdfdocument')),
            ],
            options={
                'db_table': 'council_finance_pdfprocessinglog',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='pdfdocument',
            index=models.Index(fields=['council', 'financial_year'], name='council_fin_council_5e8ddf_idx'),
        ),
        migrations.AddIndex(
            model_name='pdfdocument',
            index=models.Index(fields=['uploaded_by', 'created_at'], name='council_fin_uploade_c5eda6_idx'),
        ),
        migrations.AddIndex(
            model_name='pdfdocument',
            index=models.Index(fields=['processing_status', 'created_at'], name='council_fin_process_217718_idx'),
        ),
        migrations.AddIndex(
            model_name='pdfdocument',
            index=models.Index(fields=['access_token'], name='council_fin_access__9be310_idx'),
        ),
        migrations.AddIndex(
            model_name='pdfdocument',
            index=models.Index(fields=['is_active', 'created_at'], name='council_fin_is_acti_a633d0_idx'),
        ),
        migrations.AddIndex(
            model_name='pdfprocessinglog',
            index=models.Index(fields=['pdf_document', 'created_at'], name='council_fin_pdf_doc_5c0c8b_idx'),
        ),
        migrations.AddIndex(
            model_name='pdfprocessinglog',
            index=models.Index(fields=['level', 'created_at'], name='council_fin_level_9cf198_idx'),
        ),
    ]
