# Generated by Django 5.2.3 on 2025-08-03 18:29

import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('council_finance', '0080_auto_20250803_1839'),
    ]

    operations = [
        migrations.CreateModel(
            name='AIUsageTrend',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('hour', models.IntegerField(default=0)),
                ('request_count', models.IntegerField(default=0)),
                ('unique_councils', models.IntegerField(default=0)),
                ('avg_response_time', models.FloatField(default=0.0)),
                ('success_rate', models.FloatField(default=100.0)),
                ('total_cost', models.DecimalField(decimal_places=6, default=0, max_digits=10)),
                ('avg_cost_per_request', models.DecimalField(decimal_places=6, default=0, max_digits=8)),
                ('predicted_next_hour_requests', models.IntegerField(blank=True, null=True)),
                ('predicted_next_hour_cost', models.DecimalField(blank=True, decimal_places=6, max_digits=8, null=True)),
                ('prediction_confidence', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'ai_usage_trend',
                'ordering': ['-date', '-hour'],
            },
        ),
        migrations.CreateModel(
            name='CostForecast',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period_type', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('yearly', 'Yearly')], max_length=10)),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('actual_cost', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('actual_requests', models.IntegerField(blank=True, null=True)),
                ('forecasted_cost', models.DecimalField(decimal_places=4, max_digits=10)),
                ('forecasted_requests', models.IntegerField()),
                ('forecast_confidence', models.FloatField()),
                ('budget_limit', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('budget_alert_sent', models.BooleanField(default=False)),
                ('budget_exceeded_at', models.DateTimeField(blank=True, null=True)),
                ('cost_optimization_tips', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'cost_forecast',
                'ordering': ['-period_start'],
            },
        ),
        migrations.CreateModel(
            name='LoadBalancerConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('requests_per_second_threshold', models.IntegerField(default=10)),
                ('cpu_threshold', models.FloatField(default=80.0)),
                ('memory_threshold', models.FloatField(default=85.0)),
                ('min_instances', models.IntegerField(default=1)),
                ('max_instances', models.IntegerField(default=5)),
                ('scale_up_cooldown', models.IntegerField(default=300)),
                ('scale_down_cooldown', models.IntegerField(default=600)),
                ('current_instances', models.IntegerField(default=1)),
                ('last_scaled_at', models.DateTimeField(blank=True, null=True)),
                ('avg_request_time', models.FloatField(default=0.0)),
                ('requests_per_second', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'load_balancer_config',
            },
        ),
        migrations.CreateModel(
            name='PerformanceAnomaly',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anomaly_type', models.CharField(choices=[('spike', 'Traffic Spike'), ('slowdown', 'Performance Slowdown'), ('error_rate', 'High Error Rate'), ('cost_spike', 'Cost Spike'), ('cache_miss', 'High Cache Miss Rate')], max_length=20)),
                ('detected_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('severity', models.IntegerField(default=1)),
                ('metric_name', models.CharField(max_length=100)),
                ('expected_value', models.FloatField()),
                ('actual_value', models.FloatField()),
                ('deviation_percentage', models.FloatField()),
                ('affected_councils', models.JSONField(default=list)),
                ('affected_features', models.JSONField(default=list)),
                ('auto_resolved', models.BooleanField(default=False)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('resolution_notes', models.TextField(blank=True)),
                ('predicted_duration', models.IntegerField(blank=True, null=True)),
                ('predicted_impact', models.JSONField(default=dict)),
            ],
            options={
                'db_table': 'performance_anomaly',
                'ordering': ['-detected_at'],
            },
        ),
        migrations.RemoveConstraint(
            model_name='sitewidedatasummary',
            name='unique_summary_date_year_field',
        ),
        migrations.RenameIndex(
            model_name='aiusagelog',
            new_name='ai_usage_lo_created_aa64d8_idx',
            old_name='ai_usage_lo_created_7daec8_idx',
        ),
        migrations.RenameIndex(
            model_name='aiusagelog',
            new_name='ai_usage_lo_council_d1525e_idx',
            old_name='ai_usage_lo_council_893bcf_idx',
        ),
        migrations.RenameIndex(
            model_name='aiusagelog',
            new_name='ai_usage_lo_model_u_5baee2_idx',
            old_name='ai_usage_lo_model_u_d7b6e9_idx',
        ),
        migrations.RenameIndex(
            model_name='aiusagelog',
            new_name='ai_usage_lo_success_650f4f_idx',
            old_name='ai_usage_lo_success_0b7a7e_idx',
        ),
        migrations.RenameIndex(
            model_name='cachewarmupschedule',
            new_name='cache_warmu_is_acti_a89708_idx',
            old_name='cache_warmu_is_acti_6c0a19_idx',
        ),
        migrations.RenameIndex(
            model_name='cachewarmupschedule',
            new_name='cache_warmu_priorit_9afee6_idx',
            old_name='cache_warmu_priorit_10c86a_idx',
        ),
        migrations.RenameIndex(
            model_name='dailycostsummary',
            new_name='daily_cost__date_3dfdc0_idx',
            old_name='daily_cost__date_4ee73b_idx',
        ),
        migrations.RenameIndex(
            model_name='optimizedfactoidcache',
            new_name='optimized_f_cache_l_f6e395_idx',
            old_name='optimized__cache_l_mno345_idx',
        ),
        migrations.RenameIndex(
            model_name='optimizedfactoidcache',
            new_name='optimized_f_cache_k_2594e2_idx',
            old_name='optimized__cache_k_pqr678_idx',
        ),
        migrations.RenameIndex(
            model_name='optimizedfactoidcache',
            new_name='optimized_f_expires_0f47a2_idx',
            old_name='optimized__expires_stu901_idx',
        ),
        migrations.RenameIndex(
            model_name='performancealert',
            new_name='performance_is_acti_51da3d_idx',
            old_name='performance_is_acti_0e8ad7_idx',
        ),
        migrations.RenameIndex(
            model_name='performancealert',
            new_name='performance_alert_t_019e8b_idx',
            old_name='performance_alert_t_d31bec_idx',
        ),
        migrations.RenameIndex(
            model_name='sitewidedatachangelog',
            new_name='sitewide_da_timesta_369926_idx',
            old_name='sitewide_da_timesta_def456_idx',
        ),
        migrations.RenameIndex(
            model_name='sitewidedatachangelog',
            new_name='sitewide_da_change__9257fe_idx',
            old_name='sitewide_da_change__ghi789_idx',
        ),
        migrations.RenameIndex(
            model_name='sitewidedatachangelog',
            new_name='sitewide_da_affecte_ae5c6d_idx',
            old_name='sitewide_da_affecte_jkl012_idx',
        ),
        migrations.RenameIndex(
            model_name='sitewidedatasummary',
            new_name='sitewide_da_date_ca_97820b_idx',
            old_name='sitewide_da_date_ca_fda1ec_idx',
        ),
        migrations.RenameIndex(
            model_name='sitewidedatasummary',
            new_name='sitewide_da_field_i_c3c210_idx',
            old_name='sitewide_da_field_i_b12345_idx',
        ),
        migrations.RenameIndex(
            model_name='sitewidedatasummary',
            new_name='sitewide_da_data_co_93e5eb_idx',
            old_name='sitewide_da_data_co_abc123_idx',
        ),
        migrations.AlterField(
            model_name='council',
            name='website',
            field=models.URLField(default='', help_text='Official council website URL'),
            preserve_default=False,
        ),
        migrations.AlterUniqueTogether(
            name='sitewidedatasummary',
            unique_together={('date_calculated', 'year', 'field')},
        ),
        migrations.AddIndex(
            model_name='aiusagetrend',
            index=models.Index(fields=['date', 'hour'], name='ai_usage_tr_date_bf1586_idx'),
        ),
        migrations.AddIndex(
            model_name='aiusagetrend',
            index=models.Index(fields=['request_count'], name='ai_usage_tr_request_32f400_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='aiusagetrend',
            unique_together={('date', 'hour')},
        ),
        migrations.AddIndex(
            model_name='costforecast',
            index=models.Index(fields=['period_type', 'period_start'], name='cost_foreca_period__feecde_idx'),
        ),
        migrations.AddIndex(
            model_name='costforecast',
            index=models.Index(fields=['budget_exceeded_at'], name='cost_foreca_budget__899708_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='costforecast',
            unique_together={('period_type', 'period_start')},
        ),
        migrations.AddIndex(
            model_name='performanceanomaly',
            index=models.Index(fields=['anomaly_type', 'detected_at'], name='performance_anomaly_d7c107_idx'),
        ),
        migrations.AddIndex(
            model_name='performanceanomaly',
            index=models.Index(fields=['severity', 'auto_resolved'], name='performance_severit_e25559_idx'),
        ),
    ]
