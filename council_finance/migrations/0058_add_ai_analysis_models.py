# Generated by Django 5.2.3 on 2025-07-22 08:23

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('council_finance', '0057_alter_factoid_options_factoidplaylist_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AIModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('model_id', models.CharField(help_text='API model identifier (e.g., gpt-4, claude-3-opus)', max_length=200)),
                ('max_tokens', models.IntegerField(default=2000, validators=[django.core.validators.MinValueValidator(100), django.core.validators.MaxValueValidator(8000)])),
                ('temperature', models.FloatField(default=0.7, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(2.0)])),
                ('is_active', models.BooleanField(default=True)),
                ('cost_per_token', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'AI Model',
                'verbose_name_plural': 'AI Models',
                'ordering': ['provider__name', 'name'],
            },
        ),
        migrations.CreateModel(
            name='AIProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('api_endpoint', models.URLField(blank=True, help_text='Custom API endpoint if needed')),
                ('is_active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'AI Provider',
                'verbose_name_plural': 'AI Providers',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='AIAnalysisTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('description', models.TextField(blank=True)),
                ('system_prompt', models.TextField(help_text='System prompt with Django template variables available: {{council}}, {{current_year}}, {{previous_year}}, {{financial_data}}, etc.')),
                ('context_fields', models.JSONField(default=list, help_text="List of data fields to include in analysis context (e.g., ['total_debt', 'current_liabilities'])")),
                ('analysis_type', models.CharField(choices=[('financial_health', 'Financial Health Analysis'), ('year_comparison', 'Year-over-Year Comparison'), ('debt_analysis', 'Debt Position Analysis'), ('budget_analysis', 'Budget Analysis'), ('risk_assessment', 'Risk Assessment'), ('peer_comparison', 'Peer Council Comparison'), ('general', 'General Analysis')], default='general', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'AI Analysis Template',
                'verbose_name_plural': 'AI Analysis Templates',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='AIAnalysisConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('cache_duration_minutes', models.IntegerField(default=60, help_text='How long to cache analysis results (5-1440 minutes)', validators=[django.core.validators.MinValueValidator(5), django.core.validators.MaxValueValidator(1440)])),
                ('max_retries', models.IntegerField(default=3, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('timeout_seconds', models.IntegerField(default=30, validators=[django.core.validators.MinValueValidator(10), django.core.validators.MaxValueValidator(120)])),
                ('is_default', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='council_finance.aianalysistemplate')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='council_finance.aimodel')),
            ],
            options={
                'verbose_name': 'AI Analysis Configuration',
                'verbose_name_plural': 'AI Analysis Configurations',
                'ordering': ['-is_default', 'name'],
            },
        ),
        migrations.AddField(
            model_name='aimodel',
            name='provider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='models', to='council_finance.aiprovider'),
        ),
        migrations.AlterUniqueTogether(
            name='aimodel',
            unique_together={('provider', 'model_id')},
        ),
        migrations.CreateModel(
            name='CouncilAIAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('analysis_text', models.TextField()),
                ('analysis_summary', models.TextField(blank=True, help_text='Brief summary for sidebar display')),
                ('key_insights', models.JSONField(default=list, help_text='List of key insight strings')),
                ('risk_factors', models.JSONField(default=list, help_text='List of identified risk factors')),
                ('recommendations', models.JSONField(default=list, help_text='List of recommendations')),
                ('input_data', models.JSONField(help_text='Financial data used for analysis')),
                ('tokens_used', models.IntegerField(blank=True, null=True)),
                ('processing_time_ms', models.IntegerField(blank=True, null=True)),
                ('cost_estimate', models.DecimalField(blank=True, decimal_places=6, max_digits=8, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cached', 'From Cache')], default='pending', max_length=20)),
                ('error_message', models.TextField(blank=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(help_text='When this analysis expires and should be regenerated')),
                ('configuration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='council_finance.aianalysisconfiguration')),
                ('council', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_analyses', to='council_finance.council')),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='council_finance.financialyear')),
            ],
            options={
                'verbose_name': 'Council AI Analysis',
                'verbose_name_plural': 'Council AI Analyses',
                'ordering': ['-created'],
                'unique_together': {('council', 'year', 'configuration')},
            },
        ),
    ]
