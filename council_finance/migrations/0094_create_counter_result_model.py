# Generated by Django 5.2.3 on 2025-08-06 21:01

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('council_finance', '0093_add_osa_compliance_fields'),
    ]

    operations = [
        migrations.CreateModel(
            name='CounterResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.DecimalField(decimal_places=2, help_text='Calculated counter value', max_digits=20)),
                ('calculated_at', models.DateTimeField(auto_now_add=True, help_text='When this result was calculated')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When this result was last updated')),
                ('data_hash', models.CharField(help_text='Hash of source data for change detection', max_length=64)),
                ('is_stale', models.BooleanField(default=False, help_text='Whether this result needs recalculation')),
                ('stale_marked_at', models.DateTimeField(blank=True, help_text='When this result was marked as stale', null=True)),
                ('calculation_time_seconds', models.FloatField(blank=True, help_text='How long this calculation took', null=True)),
                ('cache_hits', models.PositiveIntegerField(default=0, help_text='Number of times this result was served from cache')),
                ('last_accessed', models.DateTimeField(blank=True, help_text='When this result was last accessed', null=True)),
                ('stale_mark_count', models.PositiveIntegerField(default=0, help_text='Number of times marked stale (for rate limiting)')),
                ('rate_limit_reset_at', models.DateTimeField(blank=True, help_text='When rate limiting counter resets', null=True)),
                ('council', models.ForeignKey(blank=True, help_text='Council this result is for (None for site-wide totals)', null=True, on_delete=django.db.models.deletion.CASCADE, to='council_finance.council')),
                ('counter', models.ForeignKey(help_text='The counter definition this result belongs to', on_delete=django.db.models.deletion.CASCADE, to='council_finance.counterdefinition')),
                ('year', models.ForeignKey(blank=True, help_text='Financial year this result is for (None for all-years)', null=True, on_delete=django.db.models.deletion.CASCADE, to='council_finance.financialyear')),
            ],
            options={
                'indexes': [models.Index(fields=['counter', 'council', 'year'], name='idx_counter_lookup'), models.Index(fields=['calculated_at'], name='idx_counter_calculated_at'), models.Index(fields=['is_stale'], name='idx_counter_stale'), models.Index(fields=['last_accessed'], name='idx_counter_accessed'), models.Index(fields=['stale_mark_count', 'rate_limit_reset_at'], name='idx_counter_rate_limit')],
                'unique_together': {('counter', 'council', 'year')},
            },
        ),
    ]
